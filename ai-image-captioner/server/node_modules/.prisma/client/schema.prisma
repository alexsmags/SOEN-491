generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?

  // optional for local auth
  passwordHash String? @map("password_hash")

  accounts Account[]
  sessions Session[]
  media    Media[] // NEW RELATION

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// NEW
model Media {
  id       String  @id @default(cuid())
  userId   String  @map("user_id")
  imageUrl String // e.g., /uploads/xxx.jpg or https://s3.amazonaws.com/bucket/key
  caption  String
  tone     String?
  keywords Json?   @db.JsonB

  // Editor styling
  fontFamily String?  @default("Arial")
  fontSize   Int?     @default(24)
  textColor  String?  @default("#FFFFFF")
  align      String?  @default("center")
  showBg     Boolean? @default(true)
  bgColor    String?  @default("#3B3F4A")
  bgOpacity  Float?   @default(0.8)
  posX       Int?     @default(120)
  posY       Int?     @default(120)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@map("media")
}
